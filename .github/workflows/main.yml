name: Deploy

on:
  push:
    branches:
      - main
    
jobs:
  build:
    name: build-app
    runs-on: ubuntu-latest
    steps:
    - name: Get Github Actions IP
      id: ip
      uses: haythem/public-ip@v1.2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2
    
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.17'
        
    - name: Cache dependencies
      id: cache
      uses: actions/cache@v3
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install Dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        npm ci
          
    - name: Create .env.production for CD Deploy
      run: |
        echo "${{ secrets.CD_DEPLOY_CONFIG }}" > .env.production
    - name: Build
      run: |
        npm run build
        ls
        
    - name: Add Github Actions IP to Security group
      run: |
        aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
        
    - name: SCP Action
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST_PROD }}
        username: ec2-user
        key: ${{ secrets.PRIVATE_KEY }}
        source: "./dist/*"
        target: "/home/ec2-user/actions-tmp-repo"
        
    - name: Remove Github Actions IP From Security Group
      run: |
        aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
        
  deploy:
    needs: build
    name: Deploy
    runs-on: [ self-hosted, deploy-frontend ]
    steps:  
      - name: Deploy to prod
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST_PROD }}
          username: ec2-user
          key: ${{ secrets.PRIVATE_KEY }}
          script_stop: true
          script: |
            cd frontend-actions-runner
            cp -r ~/actions-tmp-repo/dist/* ./html/
            docker image prune -f
            docker logout
            
            docker-compose up -d
